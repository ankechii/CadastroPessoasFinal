
@{
    ViewBag.Title = "Cadastrar";
    string dataAtual = string.Format("{0:yyyy-MM-dd}", DateTime.Today.AddDays(1));
    string dataAtualFormatoBrasileiro = string.Format("{0:dd/MM/yyyy}", DateTime.Now);
}

@section Scripts{
    <script src="~/Scripts/vue-the-mask.js"></script>
    <script src="~/Scripts/vee-validate.js"></script>
    <script src="~/Scripts/axios.js"></script>
    <script src="~/Scripts/promise.js"></script>
    <script>
        Vue.use(VueTheMask);
        Vue.use(VeeValidate, {
            classes: true,
            classNames: {
                valid: 'is-valid',
                invalid: 'is-invalid'
            },
            dictionary: {
                en: {
                    messages: {
                        required: 'Campo obrigatório',
                        date_format: 'Data inválida',
                        date_between: 'Data de nascimento precisa estar entre 01/01/1922 e @dataAtualFormatoBrasileiro',
                        alpha_spaces: 'O Campo deve conter apenas letras e espaços',
                        email: 'Email inválido',

                    }
                }
            }
        });

        function ValidarCPF(strCPF) {
            var Soma;
            var Resto;
            Soma = 0;
            strCPF = strCPF.replace(/[^0-9]/g, '');
            if (strCPF == "00000000000" || strCPF == "11111111111" || strCPF == "22222222222" || strCPF == "33333333333" || strCPF == "44444444444" ||
                strCPF == "55555555555" || strCPF == "66666666666" || strCPF == "77777777777" || strCPF == "88888888888" || strCPF == "99999999999") return false;

            for (i = 1; i <= 9; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (11 - i);
            Resto = (Soma * 10) % 11;

            if ((Resto == 10) || (Resto == 11)) Resto = 0;
            if (Resto != parseInt(strCPF.substring(9, 10))) return false;

            Soma = 0;
            for (i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i - 1, i)) * (12 - i);
            Resto = (Soma * 10) % 11;

            if ((Resto == 10) || (Resto == 11)) Resto = 0;
            if (Resto != parseInt(strCPF.substring(10, 11))) return false;
            return true;
        }

        function verificarCpfJaCadastrado(cpfInformado) {
            return new Promise(function (resolve) {
                axios.get('/api/pessoa/verificar-cpf-ja-cadastrado', { params: { cpf: cpfInformado } }).then(function (resposta) {
                    resolve({
                        valid: !resposta.data.resultado,
                        data: 'CPF já cadastrado'
                    });
                }).catch(function () {
                    resolve({
                        valid: false,
                        data: 'Erro ao validar CPF'
                    });
                });
            });
        }
        function verificarEmailJaCadastrado(emailInformado) {
            return new Promise(function (resolve) {
                axios.get('/api/pessoa/verificar-email-ja-cadastrado', { params: { email: emailInformado } }).then(function (resposta) {
                    resolve({
                        valid: !resposta.data.resultado,
                        data: 'Email já cadastrado'
                    });
                }).catch(function () {
                    resolve({
                        valid: false,
                        data: 'Erro ao validar Email'
                    });
                });
            });
        }

        new Vue({
            el: '#formCadastroPessoas',
            data: {
                pessoa: {}
            },
            created: function () {
                this.$validator.extend('validar-cpf', {
                    getMessage: 'CPF inválido',
                    validate: function (value) {
                        return ValidarCPF(value);
                    }
                });

                this.$validator.extend('verificar-cpf-ja-cadastrado', {
                    getmessege: function (resolve, params, data) {
                        return data;
                    },
                    validate: verificarCpfJaCadastrado
                });

                this.$validator.extend('verificar-email-ja-cadastrado', {
                    getmessege: function (resolve, params, data) {
                        return data;
                    },
                    validate: verificarEmailJaCadastrado
                });
            },
            methods: {
                salvar: function (event) {
                    this.$validator.validateAll().then(function (valido) {
                        if (valido) {
                            event.target.submit();
                            return;
                        }
                    })
                }
            }
        });
    </script>
}

<h2>Cadastrar dados</h2>
<br />

<div id="formCadastroPessoas">
    <form method="post" action="/Pessoa/CadastrarPost" v-on:submit.prevent="salvar(event)">
        <div class="row">
            <div class="col-7 mb-2">
                <label for="Nome">Nome: <span>*</span></label>
                <input type="text" v-validate="'required|alpha_spaces'" class="form-control" id="Nome" name="Nome" maxlength="200" />
                <div class="invalid-feedback">
                    {{ errors.first("Nome") }}
                </div>
            </div>
            <div class="col-md-5 mb-3">
                <label for="DataNascimento">Data de nascimento: <span>*</span></label>
                <input type="date" class="form-control" id="DataNascimento" name="DataNascimento" v-validate="'required|date_format:yyyy-MM-dd|date_between:1921-12-31,@dataAtual'" />
                <div class="invalid-feedback">
                    {{ errors.first("DataNascimento") }}
                </div>
            </div>
            <br />
            <div class="col-md-5 mb-3">
                <div class="row">
                    <label for="EstadoCivil">Estado Civil: <span>*</span></label>
                    <div class="mb-2">
                        <select class="form-select" id="EstadoCivil" name="EstadoCivil" v-validate="'required'">
                            <option selected value="">Selecione uma opcão...</option>
                            <option>Solteiro(a)</option>
                            <option>Casado(a)</option>
                            <option>Divorciado(a)</option>
                            <option>Viúvo(a)</option>
                        </select>
                        <div class="invalid-feedback">
                            Campo obrigatório
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="Celular">Informe o celular:</label>
                <input type="text" class="form-control" id="Celular" name="Celular" v-mask="['(##) ####-####', '(##) #####-####']"/>
                <div class="invalid-feedback">
                    {{ errors.first("Celular") }}
                </div>
            </div>
            <div class="col-md mb-3">
                <br />
                <label style="position: absolute"  for="SexoMasculino">Gênero: <span> *</span></label>
                <div class="row-9">
                    <div style="float: right" class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="SexoMasculino" v-validate="'required'" name="Sexo" value="M" />
                        <label class="form-check-label" for="SexoMasculino">Masculino</label>
                    </div>
                    <div style="float: right" class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="SexoFeminino" v-validate="'required'" name="Sexo" value="F" />
                        <label class="form-check-label" for="SexoFeminino">Feminino</label>
                    </div>
                    <div class="invalid-feedback">
                        Campo obrigatório
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class=" col-6">
                <label for="CPF">Informe o CPF: <span>*</span></label>
                <input type="text" class="form-control" id="CPF" name="CPF" v-mask="'###.###.###-##'" v-validate="'required|validar-cpf|verificar-cpf-ja-cadastrado'" />
                <div class="invalid-feedback">
                    {{ errors.first("CPF") }}
                </div>
            </div>
            <div class="col-md-6">
                <label for="CEP">Informe o CEP: <span>*</span></label>
                <input type="text" class="form-control" id="CEP" name="CEP" v-mask="'#####-###'" v-validate="'required'" />
                <div class="invalid-feedback">
                    Campo obrigatório
                </div>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-md-6 mb-2">
                <label for="Endereco">Endereço: <span>*</span></label>
                <input type="text" class="form-control" id="Endereco" name="Endereco" v-validate="'required|alpha_spaces'" maxlength="100" />
                <div class="invalid-feedback">
                    Campo obrigatório
                </div>
            </div>
            <div class="col-md-4 mb-2">
                <label for="Bairro">Bairro: <span>*</span></label>
                <input type="text" class="form-control" id="Bairro" name="Bairro" v-validate="'required|alpha_spaces'" maxlength="50" />
                <div class="invalid-feedback">
                    Campo obrigatório
                </div>
            </div>
            <div class="col-md-2 mb-2">
                <label for="Numero">Número: <span>*</span></label>
                <input type="text" class="form-control" id="Numero" name="Numero" v-validate="'required'" maxlength="10" />
                <div class="invalid-feedback">
                    Campo obrigatório
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-5 mb-2">
                <label for="Complemento">Complemento:</label>
                <input type="text" class="form-control" id="Complemento" name="Complemento" maxlength="30" v-validade="'alpha_spaces'" />
            </div>
            <div class="col-md-4 mb-2">
                <label for="Cidade">Cidade: <span>*</span></label>
                <input type="text" class="form-control" id="Cidade" name="Cidade" v-validate="'required|alpha_spaces'" maxlength="50" />
                <div class="invalid-feedback">
                    Campo obrigatório
                </div>
            </div>
            <div class="col-md-3 mb-2">
                <label for="UF">UF: <span>*</span></label>
                <select class="form-select" id="UF" name="UF" v-validate="'required'">
                    <option selected value="">Selecione uma opcão...</option>
                    <option value="AC">Acre</option>
                    <option value="AL">Alagoas</option>
                    <option value="AP">Amapá</option>
                    <option value="AM">Amazonas</option>
                    <option value="BA">Bahia</option>
                    <option value="CE">Ceará</option>
                    <option value="DF">Distrito Federal</option>
                    <option value="ES">Espirito Santo</option>
                    <option value="GO">Goiás</option>
                    <option value="MA">Maranhão</option>
                    <option value="MS">Mato Grosso do Sul</option>
                    <option value="MT">Mato Grosso</option>
                    <option value="MG">Minas Gerais</option>
                    <option value="PA">Pará</option>
                    <option value="PB">Paraíba</option>
                    <option value="PR">Paraná</option>
                    <option value="PE">Pernambuco</option>
                    <option value="PI">Piauí</option>
                    <option value="RJ">Rio de Janeiro</option>
                    <option value="RN">Rio Grande do Norte</option>
                    <option value="RS">Rio Grande do Sul</option>
                    <option value="RO">Rondônia</option>
                    <option value="RR">Roraima</option>
                    <option value="SC">Santa Catarina</option>
                    <option value="SP">São Paulo</option>
                    <option value="SE">Sergipe</option>
                    <option value="TO">Tocantins</option>
                </select>
                <div class="invalid-feedback">
                    Campo obrigatório
                </div>
            </div>
        </div>
        <hr />  <br />
        <h2>Cadastrar login</h2>
        <div class="row">
            <div class="col-md-4">
                <label for="Email">Email: <span>*</span></label>
                <input type="email" class="form-control" id="Email" name="Email" v-validate="'email|required|verificar-email-ja-cadastrado'">
                {{ errors.first("Email") }}
            </div>
            <div class="col-md-4">
                <label for="Senha">Senha: <span>*</span></label>
                <input type="password" class="form-control" id="Senha" name="Senha"  v-validate="'required'">
            </div>
        </div>
        <br />
        <hr />
        <button type="submit" class="btn btn-primary">Salvar</button>
        <a href="/Pessoa/Home" class="btn btn-primary">Voltar</a>
    </form>
</div>